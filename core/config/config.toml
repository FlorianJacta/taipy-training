[TAIPY]

[DATA_NODE.initial_dataset]
storage_type = "csv"
scope = "GLOBAL:SCOPE"
path = "data/dataset.csv"

[DATA_NODE.day]
scope = "SCENARIO:SCOPE"
default_data = "2021-07-26T00:00:00:datetime"

[DATA_NODE.cleaned_dataset]
scope = "GLOBAL:SCOPE"

[DATA_NODE.predictions]
scope = "SCENARIO:SCOPE"

[DATA_NODE.evaluation]
scope = "SCENARIO:SCOPE"

[TASK.clean_data]
inputs = [ "initial_dataset:SECTION",]
function = "algos.algos.clean_data:function"
outputs = [ "cleaned_dataset:SECTION",]
skippable = "True:bool"

[TASK.predict]
inputs = [
  "cleaned_dataset:SECTION",
  "day:SECTION",
  "cleaned_datset:SECTION"
]
function = "algos.algos.predict:function"
outputs = [ "predictions:SECTION",]
skippable = "False:bool"

[TASK.evaluate]
inputs = [ "predictions:SECTION", "cleaned_dataset:SECTION", "day:SECTION",]
function = "algos.algos.evaluate:function"
outputs = [ "evaluation:SECTION",]
skippable = "False:bool"

[PIPELINE.baseline]
tasks = [ "clean_data:SECTION", "predict:SECTION", "evaluate:SECTION",]

[SCENARIO.scenario]
pipelines = [ "baseline:SECTION",]
frequency = "DAILY:FREQUENCY"

[DATA_NODE.cleaned_dataset.default_data]
x = [ "1:int", "2:int", "3:int",]

[SCENARIO.scenario.comparators]

[TASK.clean_data_2]
inputs = [ "initial_dataset:SECTION" ]
outputs = [ "cleaned_datset:SECTION" ]
function = "algos.algos.clean_data_2:function"
skippable = "False:bool"

[DATA_NODE.cleaned_datset]
storage_type = "pickle"
scope = "SCENARIO"
